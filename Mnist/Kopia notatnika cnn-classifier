{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"colab":{"name":"Kopia notatnika cnn-classifier","provenance":[{"file_id":"1abbaiO9pBYl3-DoOZSS2njsIiD3erHNV","timestamp":1605958749275}],"collapsed_sections":[]}},"cells":[{"cell_type":"code","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"fl8UX2uYSf0K","executionInfo":{"status":"ok","timestamp":1605954390870,"user_tz":-60,"elapsed":508,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"9e7b2401-db86-48ea-bf68-54e2b4637693"},"source":["import tensorflow as tf\n","import numpy as np\n","from tensorflow import keras\n","from keras import layers\n","print(tf.__version__)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["2.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","trusted":true,"id":"j87zn0zVSf0L","executionInfo":{"status":"ok","timestamp":1605954391372,"user_tz":-60,"elapsed":1000,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}}},"source":["mnist=tf.keras.datasets.mnist\n","(X_train,Y_train),(X_test,Y_test)=mnist.load_data()\n"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"trusted":true,"id":"8ITUqqJQSf0M","executionInfo":{"status":"ok","timestamp":1605954391587,"user_tz":-60,"elapsed":1209,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}}},"source":["x_train=np.array(X_train)\n","x_train=x_train.reshape([-1,28,28,1])\n","x_train=x_train/255\n","x_test=np.array(X_test)\n","x_test=x_test/255\n","x_test=x_test.reshape([-1,28,28,1])\n","\n"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"TzHQh5niSf0N","executionInfo":{"status":"ok","timestamp":1605954391589,"user_tz":-60,"elapsed":1204,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"38b1e2d3-5e44-4015-f3f9-59cf6c3b899f"},"source":["model=keras.Sequential()\n","model.add(keras.Input(shape=(28,28,1)))\n","model.add(layers.Conv2D(16,(7,7)))\n","model.add(layers.BatchNormalization(axis=3))\n","model.add(layers.Activation('relu'))\n","model.add(layers.Dropout(0.2))\n","model.add(layers.MaxPooling2D((2,2)))\n","model.summary()"],"execution_count":25,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_4 (Conv2D)            (None, 22, 22, 16)        800       \n","_________________________________________________________________\n","batch_normalization_4 (Batch (None, 22, 22, 16)        64        \n","_________________________________________________________________\n","activation_4 (Activation)    (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","max_pooling2d_4 (MaxPooling2 (None, 11, 11, 16)        0         \n","=================================================================\n","Total params: 864\n","Trainable params: 832\n","Non-trainable params: 32\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"u7ZB5cwdSf0N","executionInfo":{"status":"ok","timestamp":1605954391808,"user_tz":-60,"elapsed":1415,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"15195343-45cd-478d-97cc-21a4c1a02435"},"source":["model.add(keras.Input(shape=(28,28,1)))\n","model.add(layers.Conv2D(128,(5,5)))\n","model.add(layers.BatchNormalization(axis=3))\n","model.add(layers.Activation('relu'))\n","model.add(layers.Dropout(0.2))\n","model.add(layers.MaxPooling2D((2,2)))\n","model.summary()"],"execution_count":26,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_4 (Conv2D)            (None, 22, 22, 16)        800       \n","_________________________________________________________________\n","batch_normalization_4 (Batch (None, 22, 22, 16)        64        \n","_________________________________________________________________\n","activation_4 (Activation)    (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","max_pooling2d_4 (MaxPooling2 (None, 11, 11, 16)        0         \n","_________________________________________________________________\n","input_6 (InputLayer)         multiple                  0         \n","_________________________________________________________________\n","conv2d_5 (Conv2D)            (None, 7, 7, 128)         51328     \n","_________________________________________________________________\n","batch_normalization_5 (Batch (None, 7, 7, 128)         512       \n","_________________________________________________________________\n","activation_5 (Activation)    (None, 7, 7, 128)         0         \n","_________________________________________________________________\n","dropout_5 (Dropout)          (None, 7, 7, 128)         0         \n","_________________________________________________________________\n","max_pooling2d_5 (MaxPooling2 (None, 3, 3, 128)         0         \n","=================================================================\n","Total params: 52,704\n","Trainable params: 52,416\n","Non-trainable params: 288\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"UmxKraPKSf0N","executionInfo":{"status":"ok","timestamp":1605954391810,"user_tz":-60,"elapsed":1409,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"368ceece-4016-4721-8de0-8794d319f99d"},"source":["model.add(layers.Flatten())\n","model.add(layers.Dense(10,activation='softmax'))\n","model.summary()"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_4 (Conv2D)            (None, 22, 22, 16)        800       \n","_________________________________________________________________\n","batch_normalization_4 (Batch (None, 22, 22, 16)        64        \n","_________________________________________________________________\n","activation_4 (Activation)    (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 22, 22, 16)        0         \n","_________________________________________________________________\n","max_pooling2d_4 (MaxPooling2 (None, 11, 11, 16)        0         \n","_________________________________________________________________\n","input_6 (InputLayer)         multiple                  0         \n","_________________________________________________________________\n","conv2d_5 (Conv2D)            (None, 7, 7, 128)         51328     \n","_________________________________________________________________\n","batch_normalization_5 (Batch (None, 7, 7, 128)         512       \n","_________________________________________________________________\n","activation_5 (Activation)    (None, 7, 7, 128)         0         \n","_________________________________________________________________\n","dropout_5 (Dropout)          (None, 7, 7, 128)         0         \n","_________________________________________________________________\n","max_pooling2d_5 (MaxPooling2 (None, 3, 3, 128)         0         \n","_________________________________________________________________\n","flatten_2 (Flatten)          (None, 1152)              0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 10)                11530     \n","=================================================================\n","Total params: 64,234\n","Trainable params: 63,946\n","Non-trainable params: 288\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"trusted":true,"id":"ys-wnqHDSf0N","executionInfo":{"status":"ok","timestamp":1605954391811,"user_tz":-60,"elapsed":1403,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}}},"source":["model.compile(optimizer='Adam',loss='categorical_crossentropy',metrics='accuracy')"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"trusted":true,"id":"bFP0KGTHSf0N","executionInfo":{"status":"ok","timestamp":1605954394610,"user_tz":-60,"elapsed":504,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}}},"source":["y_train=tf.keras.utils.to_categorical(Y_train)"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"1W_OoSyuSf0N","executionInfo":{"status":"ok","timestamp":1605955061794,"user_tz":-60,"elapsed":666741,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"b3c5dc6c-dd0f-443e-a578-1f2669a6eeff"},"source":["model.fit(x_train,y_train,batch_size=32,epochs=10)"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","1875/1875 [==============================] - 65s 35ms/step - loss: 0.1212 - accuracy: 0.9621\n","Epoch 2/10\n","1875/1875 [==============================] - 65s 35ms/step - loss: 0.0559 - accuracy: 0.9832\n","Epoch 3/10\n","1875/1875 [==============================] - 65s 35ms/step - loss: 0.0426 - accuracy: 0.9866\n","Epoch 4/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0347 - accuracy: 0.9888\n","Epoch 5/10\n","1875/1875 [==============================] - 72s 38ms/step - loss: 0.0282 - accuracy: 0.9914\n","Epoch 6/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0262 - accuracy: 0.9918\n","Epoch 7/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0213 - accuracy: 0.9934\n","Epoch 8/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0196 - accuracy: 0.9934\n","Epoch 9/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0164 - accuracy: 0.9947\n","Epoch 10/10\n","1875/1875 [==============================] - 66s 35ms/step - loss: 0.0146 - accuracy: 0.9955\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f2565dca630>"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"BC3ek3aaSf0O","executionInfo":{"status":"ok","timestamp":1605955247820,"user_tz":-60,"elapsed":3011,"user":{"displayName":"mateusz opala","photoUrl":"","userId":"03534487029524084148"}},"outputId":"61dda48c-0daa-443f-cd3b-79f22c5b882f"},"source":["Y_pred=model.predict_classes(x_test)\n","print(\"The accuracy on test set is \",np.mean(Y_pred==Y_test))"],"execution_count":39,"outputs":[{"output_type":"stream","text":["The accuracy on test set is  0.9913\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"trusted":true,"id":"6XyKdgGOSf0P"},"source":[""],"execution_count":null,"outputs":[]}]}